---

# Install Atom from Homebrew Cask if necessary
- name: Install Atom from Homebrew Cask if necessary
  homebrew_cask: name="atom" state=present

# Make sure Atom and apm are installed, fail if not installed
- name: Ensure Atom and apm (Atom Package Manager) are installed
  command: which atom apm
  register: atom_status
  failed_when: atom_status.rc
  changed_when: false
  check_mode: no

# apm clean: Delete packages in node_modules not in use
- name: "apm clean : delete unused packages in node_modules"
  command: apm clean
  when: clean

# apm config: set or delete Atom configuration variables
- name: "apm config : configure items and preferences"
  command: "apm config {{ item.command }}"
  when: 
    - item.enable
    - item.command != "edit"
  with_items:
    - "{{ config }}"

# apm dedupe : Dedupe node_module packages
- name: "apm dedupe : deduplicate node_module packages"
  command: "apm dedupe {{ item.packages | default(omit) }}"
  when:
    - item.enable
  with_items:
    - "{{ dedupe }}"

# DEBUG
- debug: msg="{{ (item.file       | default(false)) | ternary('--package-file {{ item.file }}', '') }}"
  with_items:
    - "{{ install }}"

# apm install : Install Atom packages
- name: "apm install package: install Atom packages"
  command: >
    apm install {{ item.package | default(omit) }} 
    {{ (item.check      | default(false)) | ternary('--check', '')        }} 
    {{ (item.verbose    | default(false)) | ternary('--verbose', '')      }}
    {{ (item.file       | default(false)) | ternary('--package-file', '') }}
    {{ (item.production | default(false)) | ternary('--production', '')   }} 
    {{ (item.compatible | default(false)) | ternary('--compatible', '')   }} 
    {{ (item.silent     | default(false)) | ternary('--silent', '')       }} 
    {{ (item.quiet      | default(false)) | ternary('--quiet', '')        }} 
  with_items:
    - "{{ install }}"

# apm install: Install Atom packages file