---

# Install Atom from Homebrew Cask if necessary
- name: Install Atom from Homebrew Cask if necessary
  homebrew_cask: name="atom" state=present

# Make sure Atom and apm are installed, fail if not installed
- name: Ensure Atom and apm (Atom Package Manager) are installed
  command: which atom apm
  register: atom_status
  failed_when: atom_status.rc
  changed_when: false
  check_mode: no

- name: "apm clean : delete unused packages in node_modules"
  command: apm clean
  when: clean is defined

- name: "apm config : configure items and preferences"
  command: "apm config {{ item.command }} {{ item.key | default(omit) }} {{ item.value | default(omit) }}"
  when: 
    - item is defined
    - item.command is defined
    - item.command != "edit"
  with_items: "{{ config }}"

- name: "apm dedupe : deduplicate node_module packages"
  command: "apm dedupe {{ item }}"
  when:
    - item is defined
  with_items: "{{ dedupe }}"

# - name: "apm install : install packages"
#   command: "apm install {{ item }}"
#   ignore_errors: true
#   register: packages_status
#   when:
#     - item is defined
#   with_items: "{{ packages }}"

- name: copy package files to host
  copy: src='{{ role_path }}/files/{{ item }}' dest=/tmp
  when:
    - item is defined
  with_items: "{{ package_files }}"

- name: "apm install {{ package_files }}"
  command: "apm install --package-file '/tmp/{{ item }}'"
  ignore_errors: true
  register: package_files_status
  when: 
    - item is defined
  with_items: "{{ package_files }}"

# - debug: msg="{{ packages_status }}"
